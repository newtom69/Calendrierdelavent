@using AdventCalendar.ViewModels
@model CalendarViewModel

@{
    ViewBag.Title = "Index";
    int dayNumber = DateTime.Today.Day;
}

<h1>Calendrier de l'Avent de @ViewBag.CalendarName</h1>
<div class="Calendar">
    @for (int i = 1; i <= Model.GenericsPicturesNames.Count; i++)
    {
        string currentBox = "box" + i;
        <div class="BoxAndPicture">
            <img id="@currentBox" class="box" src="@Model.GenericsPicturesNames[i]" alt="@(i)" />
            @if (Model.PicturesNames.ContainsKey(i))
            {
                <img class="hover" src="@Model.PicturesNames[i]" alt="@(i)" onclick="showPopup(this, @currentBox);" />
            }
            else
            {
                <img class="hover" src="@Model.GenericsPicturesNames[i]" alt="@(i)" />
            }
        </div>

    }

</div>

<div id="PopupPicture" class="popup">
    <span class="close">&times;</span>
    <img class="popup-content" id="imageToPopup">
    <div id="caption"></div>
</div>
<script>
    var popup = document.getElementById("PopupPicture");
    var imageToPopup = document.getElementById("imageToPopup");
    var captionText = document.getElementById("caption");
    popup.onclick = function () {
        popup.style.display = "none";
    }
    var span = document.getElementsByClassName("close")[0];
    span.onclick = function () {
        popup.style.display = "none";
    }
    function showPopup(toShow, toHide) {
        toShow.style.display = 'block';
        toHide.style.display = 'none';
        popup.style.display = 'block';
        imageToPopup.src = toShow.src;
        captionText.innerHTML = toShow.alt;
    }
</script>